#include <Windows.h>
#include <winternl.h>
#include "iat-hiding-custom-getmodulehandle-lib.h"
#include "misc.h"
#include "djb2.h"


HMODULE GetModuleHandleCustom(
	IN DWORD dwModuleNameHash
)
{
	HMODULE hOutput = NULL;
	BOOL bFound = FALSE;
	WCHAR szBuf[1024] = { 0 };
	errno_t errRet = 0;
	DWORD dwHashBuf = 0;


	wprintf(L"[>] Custom GetModuleHandle: START\n");

	do {
		PPEB pPeb = (PEB*)(__readgsqword(0x60)); // x64

		PPEB_LDR_DATA pLdr = (PPEB_LDR_DATA)(pPeb->Ldr);

		PLIST_ENTRY pListEntry = &(pLdr->InMemoryOrderModuleList);

		PLIST_ENTRY pFlink = (PLIST_ENTRY)(pListEntry->Flink);
		PLDR_DATA_TABLE_ENTRY pData = NULL;

		wprintf(L"\t[>] Looking for module hash: %#08x\n", dwModuleNameHash);
		while (TRUE)
		{
			pData = (PLDR_DATA_TABLE_ENTRY)pFlink;

			if (pData->FullDllName.Length == 0)
			{
				break;
			}

			errRet = wcscpy_s(szBuf, sizeof(szBuf) / sizeof(WCHAR), pData->FullDllName.Buffer);
			if(errRet)
			{
				break;
			}
			_wcslwr_s(szBuf, sizeof(szBuf) / sizeof(WCHAR));
			dwHashBuf = djb2_hash(szBuf);

			wprintf(L"\t\t%s -> %s -> %#08x\n", pData->FullDllName.Buffer, szBuf, dwHashBuf);

			if (dwModuleNameHash == dwHashBuf)
			{
				// https://www.vergiliusproject.com/kernels/x64/Windows%2011/21H2%20(RTM)/_LDR_DATA_TABLE_ENTRY
				hOutput = (HMODULE)pData->Reserved2[0];
				bFound = TRUE;
				break;
			}

			pFlink = pFlink->Flink;
		}
		
		if (!bFound)
		{
			wprintf(L"\t[<] Module NOT found\n");
			break;
		}

		wprintf(L"\t[<] Module FOUND\n");

	} while (FALSE);

	wprintf(L"[<] Custom GetModuleHandle: ");

	if (!bFound)
	{
		wprintf(L"FAILED\n");
	}
	else
	{
		wprintf(L"DONE\n");
	}

	return hOutput;
}