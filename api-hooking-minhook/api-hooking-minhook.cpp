#include <Windows.h>
#include <corecrt_wstdio.h>
#include "api-hooking-minhook.h"
#include "MinHook.h"

// https://github.com/TsudaKageyu/minhook

typedef int(WINAPI* fnMessageBoxW)(
	HWND    hWnd,
	LPCWSTR lpText,
	LPCWSTR lpCaption,
	UINT    uType
	);
fnMessageBoxW g_pMessageBoxW = NULL;

int MessageBoxWCustom(
	HWND    hWnd,
	LPCWSTR lpText,
	LPCWSTR lpCaption,
	UINT    uType
)
{
	wprintf(L"[*] hWnd: 0x%p, lpText: \"%s\", lpCaption: \"%s\", uType: %i\n", hWnd, lpText, lpCaption, uType);

	return g_pMessageBoxW(hWnd, lpText, lpCaption, uType);
}

int main()
{
	DWORD dwRet = 0;

	do {
		MessageBoxW(NULL, L"message #1", L"Detour test", MB_OK);

		wprintf(L"[i] Initialize MinHook... ");
		dwRet = MH_Initialize();
		if (dwRet != MH_OK)
		{
			wprintf(L"[!] MH_Initialize failed with error: %d", dwRet);
			break;
		}
		wprintf(L"done\n");

		wprintf(L"[i] Configure to run MessageBoxWCustom in place of MessageBoxW... ");
		dwRet = MH_CreateHook(&MessageBoxW, &MessageBoxWCustom, (LPVOID*)&g_pMessageBoxW);
		if (dwRet != MH_OK)
		{
			wprintf(L"[!] MH_CreateHook failed with error: %d", dwRet);
			break;
		}
		wprintf(L"done\n");

		wprintf(L"[i] Install hook... ");
		dwRet = MH_EnableHook(&MessageBoxW);
		if (dwRet != MH_OK)
		{
			wprintf(L"[!] MH_EnableHook failed with error: %d", dwRet);
			break;
		}
		wprintf(L"done\n");

		//
		MessageBoxW(NULL, L"message #2", L"Detour test", MB_OK);
		//

		wprintf(L"[i] Uninstall hook... ");
		dwRet = MH_DisableHook(&MessageBoxW);
		if (dwRet != MH_OK)
		{
			wprintf(L"[!] MH_DisableHook failed with error: %d", dwRet);
			break;
		}
		wprintf(L"done\n");

		wprintf(L"[i] Uninitialize MinHook... ");
		dwRet = MH_Uninitialize();
		if (dwRet != MH_OK)
		{
			wprintf(L"[!] MH_Uninitialize failed with error: %d", dwRet);
			break;
		}
		wprintf(L"done\n");

		MessageBoxW(NULL, L"message #3", L"Detour test", MB_OK);

	} while (FALSE);

	return 0;
}