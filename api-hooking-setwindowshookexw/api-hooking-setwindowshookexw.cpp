#include <Windows.h>
#include "misc.h"


LRESULT CALLBACK KeyboardHookProc(int nCode, WPARAM wParam, LPARAM lParam)
{
    KBDLLHOOKSTRUCT* p = (KBDLLHOOKSTRUCT*)lParam;

    switch (p->vkCode)
    {
    case VK_LEFT:
        if (wParam == WM_KEYDOWN)
        {
            wprintf(L"\t[i] VK_LEFT pressed\n");
            break;
        }

    default:
        return CallNextHookEx(NULL, nCode, wParam, lParam);
    }

    return 0;
}

int main()
{
    HHOOK hKeyboardHook = NULL;
    BOOL bRet = FALSE;

    do {
        wprintf(L"[i] Installing WH_KEYBOARD_LL hook... ");
        hKeyboardHook = SetWindowsHookExW(
            WH_KEYBOARD_LL,
            (HOOKPROC)KeyboardHookProc,
            GetModuleHandle(NULL),
            NULL
        );
        if (!hKeyboardHook)
        {
            printError(L"SetWindowsHookExW");
            break;
        }
        wprintf(L"done\n");

        wprintf(L"[>] Starting msg loop\n");
        MSG msg;
        while ((bRet = GetMessage(&msg, NULL, 0, 0)) != 0)
        {
            if (bRet == -1)
            {                
                printError(L"GetMessage");
                break;
            }
            else
            {
                TranslateMessage(&msg);
                DispatchMessage(&msg);
            }
        }
        wprintf(L"[<] Finishing msg loop\n");

        wprintf(L"[i] Unhooking WH_KEYBOARD_LL... ");
        bRet = UnhookWindowsHookEx(hKeyboardHook);
        if (!bRet)
        {
            printError(L"UnhookWindowsHookEx");
            break;
        }
        wprintf(L"done\n");

    } while (FALSE);


	return 0;
}